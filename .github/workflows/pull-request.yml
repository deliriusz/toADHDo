name: Pull Request Validation

on:
  push:
    branches:
      - master # Trigger on push to master branch
  workflow_dispatch: # Allow manual triggering
on:
  pull_request:
    branches:
      - master

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  unit-test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:unit -- --coverage

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 7

  e2e-test:
    name: E2E Tests
    needs: lint
    runs-on: ubuntu-latest
    environment: integration
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      SUPABASE_E2E_DB_PASS: ${{ secrets.SUPABASE_E2E_DB_PASS }}
      E2E_USERNAME_ID: ${{ secrets.E2E_USERNAME_ID }}
      E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
      E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run E2E tests with coverage
        run: npm run test:e2e
      
      - name: Upload E2E test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

  status-comment:
    name: PR Status Comment
    if: ${{ success() }}
    needs: [unit-test, e2e-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download unit test coverage
        uses: actions/download-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage
      
      - name: Download E2E test results
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Add PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Try to read and parse coverage data
            let unitCoverage = 'Coverage data not available';
            try {
              const coverageSummary = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
              const totalCoverage = coverageSummary.total;
              unitCoverage = `
              - Lines: ${totalCoverage.lines.pct}%
              - Statements: ${totalCoverage.statements.pct}%
              - Functions: ${totalCoverage.functions.pct}%
              - Branches: ${totalCoverage.branches.pct}%
              `;
            } catch (e) {
              console.error('Error reading coverage data:', e);
            }
            
            // Create comment with test results summary
            const comment = `
            ## ðŸŽ‰ All checks passed! ðŸŽ‰
            
            ### Unit Test Coverage
            ${unitCoverage}
            
            ### E2E Tests
            âœ… All E2E tests passed
            
            [View detailed Playwright report in the artifacts](${context.payload.repository.html_url}/actions/runs/${context.runId})
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            }); 